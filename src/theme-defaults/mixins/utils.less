.utils-user-select(@value) {
  -moz-user-select: @value;
  -webkit-user-select: @value;
  -ms-user-select: @value;
}

.utils-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}


.clearfix() {
  zoom: 1;
  &:before,
  &:after {
      content: "";
      display: table;
  }
  &:after {
      clear: both;
      visibility: hidden;
      font-size: 0;
      height: 0;
  }
}

.scroll-bar {
  @--scrollbar-thumb-background: #b4bccc;
  @--scrollbar-track-background: #fff;

  &::-webkit-scrollbar {
    z-index: 11;
    width: 6px;

    &:horizontal {
      height: 6px;
    }

    &-thumb {
      border-radius: 5px;
      width: 6px;
      background: @--scrollbar-thumb-background;
    }

    &-corner {
      background: @--scrollbar-track-background;
    }

    &--track {
      background: @--scrollbar-track-background;

      &--piece {
        background: @--scrollbar-track-background;
        width: 6px;
      }
    }
  }
}

.size(@width; @height) {
  width: @width;
  height: @height;
}

.square(@size) {
  .size(@size; @size);
}

.horizontal-padding(@value) {
  padding-left: @value;
  padding-right: @value;
}

.vertical-padding(@value) {
  padding-top: @value;
  padding-bottom: @value;
}

.border-radius-bottom(@size) {
  border-bottom-left-radius: @size;
  border-bottom-right-radius: @size;
}

.border-radius-top(@size) {
  border-top-left-radius: @size;
  border-top-right-radius: @size;
}

.row {
  .horizontal-padding(@--treeselect-padding);

  display: table;
  table-layout: fixed;
  width: 100%;
}

.cell {
  display: table-cell;
  vertical-align: middle;
}

.wide-cell {
  .cell();
  .utils-ellipsis();

  width: @--treeselect-wide-cell-width;
  padding-left: @--treeselect-padding;
}

.narrow-cell {
  .cell();

  width: 16px;
  text-align: center;
  line-height: 0;
}

// based on: https://github.com/strues/retinajs/blob/master/dist/retina.less
.retina(@path, @cap: 2) {
  @lowretina: ~"(min-resolution: 1.5dppx)";
  @2xpath: replace(@path, "(\.\w+)$", "@2x$1");

  background-image: url(@path);

  @media @lowretina {
    background-image: url(@2xpath);
  }

  .create-queries() when (@cap >= 2) {
    .loop(@env) when (@env <= @cap) {
      @retinapath: replace(@path, "(\.\w+)$", "@@{env}x$1");
      @media (min-resolution: @env * 96dpi) {
        background-image: url(@retinapath);
      }

      .loop((@env + 1));
    }

    .loop(2);
  }
  .create-queries();
}
